function harminv_array = dielectric_harminv_dat(data, k_start, k_step,k_total,dielectric_width_start,dielectric_step)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   load_harminv_dat loads harminv data for multiple k values run in meep
%   data -> .dat file from harminv runs (generated by grepping a .out file
%           by filtering for "harminv")
%   k_start -> The lowest k value ran
%   k_step -> The k step size used
%   k_total -> total number of k points given by harminv calculation
%   dielectric_width -> an array containing the range of width/height
%   the height   for which no value is got will be skipped
%    Output format:
%
%
%    width/height value k_values    frequency    imag. frequency    Q    amp    error
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%dielectric_width=[1.253:0.1253:2.506];
harminv_dat = readtable(data);
harminv_dat = table2array(harminv_dat);
harminv_dat(:,1) = [];
harminv_dat(:,5) = [];
harminv_array=[];
count=1;
harminv_original=harminv_dat;

if strcmp(harminv_dat{1,1},'frequency,')

    if strcmp(harminv_dat{1,2},'imag.') & strcmp(harminv_dat{1,3},'freq.,')
      harminv_original=harminv_dat(:,1:end-1);
    else
      harminv_original=harminv_dat(:,:);

    end
else
    harminv_original=harminv_dat(:,:);
end
%concat=strcat(harminv_original(:,2),harminv_original(:,3))
%harminv_original

k = k_start;
k_list=zeros(size(harminv_original,1),1);
nan_index = 1;
k_count=1;
val_array=zeros(size(harminv_original,1),1);
val_count=0;
val=dielectric_width_start;

for index = linspace(1,numel(harminv_original(:,1)),numel(harminv_original(:,1)))
      %for val=dielectric_width

        k_list(index)=k;
        val_array(index)=val;
        val_count=val_count+1;
        %harminv_dat
        %index
        %debug=index+k_total*count
        %d1=count
        %d2=index
        %d3=index+k_total*count
        harminv=harminv_original(index,1);
        
        
        if contains(harminv,'frequency')
          %i=index
          if k_count<k_total
            val_count=val_count+1;
            k = k + k_step;
            k_count=k_count+1;
            nan_rows(nan_index) = index;
            nan_index = nan_index + 1;

          else

            val=val+dielectric_step;
            k_count=1;
            k=k_start;
            nan_rows(nan_index) = index;
            nan_index = nan_index + 1;


          end

        end

end
harminv_dat = [num2cell(k_list) harminv_original]
    
    %nan_rows
    %k_list
    %debug_init=harminv_original((count*k_total+1):k_total*c_1,:)
    
    %harminv_dat = [num2cell(k_list) harminv_original((count*k_total+1):k_total*c_1,:)];
    %debug1=size(harminv_original,2)
    %harminv_dat
    %nan_rows
 for index = flip(nan_rows)
        
      harminv_dat(index,:)= [];
      val_array(index,:)=[];
 end
    
 %val_array=val*ones(size(harminv_dat,1),1);
    
    %harminv_array=[harminv_array; num2cell(val_array) num2cell(k_list) harminv_dat((count*k_total+1):k_total*c_1,:)];
 harminv_dat=cell2table(harminv_dat);
    
    %if height(harminv_dat)==0
        %count=count+1;
        %continue
    %end
    %harminv_dat
    %harminv_dat
 str_data=harminv_dat(:,2:end);
    %harminv_dat
 for row=1:size(str_data,1)
     for col=1:size(str_data,2)
        
        num(row,col)=cellfun(@str2num,str_data{row,col});
     end
 end
    %num
 % val_array
 harminv_dat=[harminv_dat(:,1) array2table(num)];
    %harminv_dat
 harminv_dat.Properties.VariableNames=["k_values","Real frequency","Img Frequency","Q","Amplitude","Error"];
 harminv_array=[harminv_array; array2table(val_array) harminv_dat];
 
    %count=count+1;
 
    
end

